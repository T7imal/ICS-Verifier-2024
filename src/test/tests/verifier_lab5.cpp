#include <iostream>
#include <string>
#include <vector>
#define API_VER 2
#include "framework.h"

std::string prompt_1 = "SD is ready";
std::string prompt_2 = "Please input your number";

std::string input_blank = "";

// 包含超过3个"1010"的字符串，且最终的状态不同
std::string input_with_final_state_0 =
    "10000110001010001000010110010001101110001011010100";
std::string input_with_final_state_1 =
    "01010010101100100101011011011010010010001101000111";
std::string input_with_final_state_2 =
    "10100111111001100100000010100011010011101011011110";
std::string input_with_final_state_3 =
    "11010000010010111111010110000111011010100110100101";
std::string input_with_final_state_4 =
    "00100010011010101001100000101011000000010011011010";

// input_with_n_1010表示输入的字符串中包含n个"1010"
std::string input_with_12_1010 =
    "00000100001110111000101001000000101011011100110111110110001011110111001011"
    "00110110100010000111110010100100001111101010001001010111101011010101001110"
    "01100010111011100111010";
std::string input_with_123_1010 =
    "00000100001000100111101001100000001001000100110101101011100100010111000011"
    "11110100010011101100111110001010111010110111001111101001100111101111010010"
    "11011001011000110010101000010001010010101011011011110101000111000011010100"
    "00101010001101000111001110001101000001110110100010100100001011111110110101"
    "10011110000011101000010101110010001100100000110110010110110110101011101111"
    "11111001001011011110000001000110101111011010110010111100010010110110000111"
    "11111001111111001001111001000111101111010111011001110000100010010111100011"
    "00010100100111100011101111101011110010011101001110000101011110000101000100"
    "01101101011000111111111100111101000111111110110100010000100010010110111000"
    "10010010101011110010100000011001111001101101000010100111001001100100100000"
    "00001011011001001011011110101110011100111101100011011101001010110101011011"
    "10100101111010101001001000110101110101101100101011001111100000111010010001"
    "00001001111001011110011010000100110001010011001001000010000110110011001000"
    "11011110100101010101100110111101110110011011101010100000001011110011101101"
    "10100110000101001111001111010000011111110000111011100100011000100100111011"
    "00101111111011110001110101100001110101011011011100110000110100010010111110"
    "11110000001001101110100110001111000110010111010001000000011110001010110110"
    "11010100100001010011000110111110000111011000000001111101010110111100101010"
    "10000011001111000100000011001111110101100101111010000101001101100010000010"
    "11010011000100101100101010111110100001001010000111100011110101101100101000"
    "01100100111010110000000001000001010010000110001111011110011011110101100010"
    "10100110110000110100101110110100110000110001101001100010011000100000101001"
    "00011000110111001011111010000000111110010010011000011010001000010010110010"
    "01000011001100101111010100010100010010111010010010011001001011101001111100"
    "10100010100101001010011100010011000001001000110011100111100001111111000110"
    "11001010110010001001010000001101111110111000000111101011000101111000101001"
    "00010111100011011100110110100111101101111100111110000111011000011100001111"
    "00101101011100101011101010";
std::string input_with_1234_1010 =
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "1010101010101010101010101010";
std::string input_with_12345_1010 =
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010101010101010101010101010"
    "10101010101010101010101010101010101010101010101010";

std::string input_y = "y\n";

int count_1010(std::string str) {
  int count = 0;
  for (int i = 0; i < str.size() - 3; i++) {
    if (str.substr(i, 4) == "1010") {
      count++;
    }
  }
  return count;
}

// 无输入，检测输入输出提示是否正确
void test_blank(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(10000);

  bool success = true;
  bool check;

  success &= sim.runUntilInputRequested();
  // 同时包含"SD is ready"和"Please input your number"即可，
  // 防止空格、全角字符等问题
  check = tester.checkContain(tester.getOutput(), prompt_1) &&
          tester.checkContain(tester.getOutput(), prompt_2);
  tester.verify("Is Input Prompt Correct?", check, total_points / 3);

  // 输入y
  tester.clearOutput();
  tester.setInputString(input_y);
  success &= sim.runUntilHalt();

  // 验证输出提示
  check = tester.checkContain(tester.getOutput(), "There") &&
          tester.checkContain(tester.getOutput(), "in the sequence");
  tester.verify("Is Output Prompt Correct?", check, total_points / 3);

  // 验证成功Halting
  tester.verify("Is Halting?", success, total_points / 3);
}

// 随机输入，检测是否有回显
void test_echo(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(10000);

  bool success = true;
  bool check;

  // 输入字符"0"
  std::string input = "0";

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 验证输出
  check = tester.checkContain(tester.getOutput(), input);
  tester.verify("Is Input Echoed?", check, total_points / 3);

  // 输入字符"1"
  input = "1";

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 验证输出
  check = tester.checkContain(tester.getOutput(), input);
  tester.verify("Is Input Echoed?", check, total_points / 3);

  // 输入字符"y"
  input = "y";

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilHalt();

  // 验证Halting
  tester.verify("Is Halting?", success, total_points / 3);
}

// 输入 input_with_final_state_0
void test_easy_0(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(20000);

  bool success = true;
  bool check;

  std::string input = input_with_final_state_0;

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 输入字符"y"
  tester.clearOutput();
  tester.setInputString(input_y);
  success &= sim.runUntilHalt();

  // 验证输出、验证成功Halting
  // 在输出中检测到“n 1010”即可
  std::string expected_output = std::to_string(count_1010(input));
  check = tester.checkContain(tester.getOutput(), expected_output);
  std::string prompt_check =
      "Output is expected to contain \"" + expected_output + "\"";
  tester.verify(prompt_check, check, total_points * 4 / 5);
  tester.verify("Is Halting?", success, total_points * 1 / 5);
}
// 输入 input_with_final_state_1
void test_easy_1(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(20000);

  bool success = true;
  bool check;

  std::string input = input_with_final_state_1;

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 输入字符"y"
  tester.clearOutput();
  tester.setInputString(input_y);
  success &= sim.runUntilHalt();

  // 验证输出、验证成功Halting
  // 在输出中检测到“n 1010”即可
  std::string expected_output = std::to_string(count_1010(input));
  check = tester.checkContain(tester.getOutput(), expected_output);
  std::string prompt_check =
      "Output is expected to contain \"" + expected_output + "\"";
  tester.verify(prompt_check, check, total_points * 4 / 5);
  tester.verify("Is Halting?", success, total_points * 1 / 5);
}

// 输入 input_with_final_state_2
void test_easy_2(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(20000);

  bool success = true;
  bool check;

  std::string input = input_with_final_state_2;

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 输入字符"y"
  tester.clearOutput();
  tester.setInputString(input_y);
  success &= sim.runUntilHalt();

  // 验证输出、验证成功Halting
  // 在输出中检测到“n 1010”即可
  std::string expected_output = std::to_string(count_1010(input));
  check = tester.checkContain(tester.getOutput(), expected_output);
  std::string prompt_check =
      "Output is expected to contain \"" + expected_output + "\"";
  tester.verify(prompt_check, check, total_points * 4 / 5);
  tester.verify("Is Halting?", success, total_points * 1 / 5);
}

// 输入 input_with_final_state_3
void test_easy_3(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(20000);

  bool success = true;
  bool check;

  std::string input = input_with_final_state_3;

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 输入字符"y"
  tester.clearOutput();
  tester.setInputString(input_y);
  success &= sim.runUntilHalt();

  // 验证输出、验证成功Halting
  // 在输出中检测到“n 1010”即可
  std::string expected_output = std::to_string(count_1010(input));
  check = tester.checkContain(tester.getOutput(), expected_output);
  std::string prompt_check =
      "Output is expected to contain \"" + expected_output + "\"";
  tester.verify(prompt_check, check, total_points * 4 / 5);
  tester.verify("Is Halting?", success, total_points * 1 / 5);
}

// 输入 input_with_final_state_4
void test_easy_4(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(20000);

  bool success = true;
  bool check;

  std::string input = input_with_final_state_4;

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 输入字符"y"
  tester.clearOutput();
  tester.setInputString(input_y);
  success &= sim.runUntilHalt();

  // 验证输出、验证成功Halting
  // 在输出中检测到“n 1010”即可
  std::string expected_output = std::to_string(count_1010(input));
  check = tester.checkContain(tester.getOutput(), expected_output);
  std::string prompt_check =
      "Output is expected to contain \"" + expected_output + "\"";
  tester.verify(prompt_check, check, total_points * 4 / 5);
  tester.verify("Is Halting?", success, total_points * 1 / 5);
}

// 输入 input_with_12_1010
void test_with_12_1010(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(100000);

  bool success = true;
  bool check;

  // 输入包含12个"1010"的字符串
  std::string input = input_with_12_1010;

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 输入字符"y"
  tester.clearOutput();
  tester.setInputString(input_y);
  success &= sim.runUntilHalt();

  // 验证输出、验证成功Halting
  std::string expected_output = std::to_string(count_1010(input));
  check = tester.checkContain(tester.getOutput(), expected_output);
  std::string prompt_check =
      "Output is expected to contain \"" + expected_output + "\"";
  tester.verify(prompt_check, check, total_points * 4 / 5);
  tester.verify("Is Halting?", success, total_points * 1 / 5);
}

// 输入 input_with_123_1010
void test_with_123_1010(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(1000000);

  bool success = true;
  bool check;

  // 输入包含123个"1010"的字符串
  std::string input = input_with_123_1010;

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 输入字符"y"
  tester.clearOutput();
  tester.setInputString(input_y);
  success &= sim.runUntilHalt();

  // 验证输出、验证成功Halting
  std::string expected_output = std::to_string(count_1010(input));
  check = tester.checkContain(tester.getOutput(), expected_output);
  std::string prompt_check =
      "Output is expected to contain \"" + expected_output + "\"";
  tester.verify(prompt_check, check, total_points * 4 / 5);
  tester.verify("Is Halting?", success, total_points * 1 / 5);
}

// 输入 input_with_1234_1010
void test_with_1234_1010(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(1000000);

  bool success = true;
  bool check;

  // 输入包含1234个"1010"的字符串
  std::string input = input_with_1234_1010;

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 输入字符"y"
  tester.clearOutput();
  tester.setInputString(input_y);
  success &= sim.runUntilHalt();

  // 验证输出、验证成功Halting
  std::string expected_output = std::to_string(count_1010(input));
  check = tester.checkContain(tester.getOutput(), expected_output);
  std::string prompt_check =
      "Output is expected to contain \"" + expected_output + "\"";
  tester.verify(prompt_check, check, total_points * 4 / 5);
  tester.verify("Is Halting?", success, total_points * 1 / 5);
}

// 输入 input_with_12345_1010
void test_with_12345_1010(lc3::sim &sim, Tester &tester, double total_points) {
  sim.writePC(0x3000);
  sim.setRunInstLimit(5000000);

  bool success = true;
  bool check;

  // 输入包含12345个"1010"的字符串
  std::string input = input_with_12345_1010;

  tester.clearOutput();
  tester.setInputString(input);
  success &= sim.runUntilInputRequested();

  // 输入字符"y"
  tester.clearOutput();
  tester.setInputString(input_y);
  success &= sim.runUntilHalt();

  // 验证输出、验证成功Halting
  std::string expected_output = std::to_string(count_1010(input));
  check = tester.checkContain(tester.getOutput(), expected_output);
  std::string prompt_check =
      "Output is expected to contain \"" + expected_output + "\"";
  tester.verify(prompt_check, check, total_points * 4 / 5);
  tester.verify("Is Halting?", success, total_points * 1 / 5);
}

void testBringup(lc3::sim &sim) {}

void testTeardown(lc3::sim &sim) {}

void setup(Tester &tester) {
  tester.registerTest("Blank Test", test_blank, 25 * 0.8, false);
  tester.registerTest("Echo Test", test_echo, 25 * 0.8, false);
  tester.registerTest("Easy Test 0", test_easy_0, 6 * 0.8, false);
  tester.registerTest("Easy Test 1", test_easy_1, 6 * 0.8, false);
  tester.registerTest("Easy Test 2", test_easy_2, 6 * 0.8, false);
  tester.registerTest("Easy Test 3", test_easy_3, 6 * 0.8, false);
  tester.registerTest("Easy Test 4", test_easy_4, 6 * 0.8, false);
  tester.registerTest("Input with 12 1010", test_with_12_1010, 5 * 0.8, false);
  tester.registerTest("Input with 123 1010", test_with_123_1010, 5 * 0.8,
                      false);
  // 速度较慢的样例，仅保留非随机初始化的测试，降低难度且减少测试时间
  tester.registerTest("Input with 1234 1010", test_with_1234_1010, 5, false);
  tester.registerTest("Input with 12345 1010", test_with_12345_1010, 5, false);

  tester.registerTest("Blank Test", test_blank, 25 * 0.2, true);
  tester.registerTest("Echo Test", test_echo, 25 * 0.2, true);
  tester.registerTest("Easy Test 0", test_easy_0, 6 * 0.2, true);
  tester.registerTest("Easy Test 1", test_easy_1, 6 * 0.2, true);
  tester.registerTest("Easy Test 2", test_easy_2, 6 * 0.2, true);
  tester.registerTest("Easy Test 3", test_easy_3, 6 * 0.2, true);
  tester.registerTest("Easy Test 4", test_easy_4, 6 * 0.2, true);
  tester.registerTest("Input with 12 1010", test_with_12_1010, 5 * 0.2, true);
  tester.registerTest("Input with 123 1010", test_with_123_1010, 5 * 0.2, true);
  // tester.registerTest("Input with 1234 1010", test_with_1234_1010, 5 * 0.2,
  //                     true);
  // tester.registerTest("Input with 12345 1010", test_with_12345_1010, 5 * 0.2,
  //                     true);
}

void shutdown(void) {}
